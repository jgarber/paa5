<% default_site = nginx_server_names.first =~ /^localhost|\A\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\z/ %>
upstream <%= name %>_app_server {
  server unix:puma.<%= name %>.sock fail_timeout=0;
}

# <%= name %> Server
server {
  listen 80<%= ' default' if default_site %>;
  <% if nginx_server_names.any? %>server_name <%= nginx_server_names.join(' ') %>;<% end %>

  root <%= apps_directory %>/<%= name %>/current/public;

  gzip on;
  gzip_types text/plain text/xml application/xml application/xml+rss
             text/css text/javascript application/javascript application/json;

  error_page 551 =503 @maintenance;
  location @maintenance {
    rewrite ^(.*)$ /system/maintenance.html break;
  }
  set $maintenance 0;
  if (-f $document_root/system/maintenance.html) {
    set $maintenance 1;
  }
  if ($request_uri = /favicon.ico) {
    # Browsers will try to get favicon if it's not returned with 200ok status
    set $maintenance 0;
  }
  if ($maintenance) {
    # There can be several reasons for 503 error. We custom return 551 error
    # to ensure maintenance.html is only shown when it's really maintenance
    return 551;
  }

  rewrite ^/(.*)/$ /$1 permanent; # Truncate trailing slashes
  try_files $uri @rails;

  expires -1;
# TODO: enable cache for all non-static content
# maybe expires max; in server context, and expires -1; in @rails location?
#  location ~ \.[\w]+$ { # Files with extension, .css, .png, etc.
#    expires max;
#  }

  location = /favicon.ico {
    try_files $uri =204;
    access_log off;
    log_not_found off;
  }

  location @rails {
    proxy_pass http://<%= name %>_app_server;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_intercept_errors on;
    expires -1;
  }

  error_page 500 502 503 504 /500.html;
  error_page 403 /403.html;
  error_page 404 /404.html;

  client_max_body_size 50M;
  keepalive_timeout 10;
}
